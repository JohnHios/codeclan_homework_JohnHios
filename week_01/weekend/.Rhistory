books_raw_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
View(books_raw_renamed)
View(books_raw_renamed)
# total number of missing values (NA, NaN) in dataset
sum(is.na(books_raw_renamed))
books_raw_renamed_date_conv <- books_raw_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_raw_renamed_date_conv
# total number of missing values (NA, NaN) in dataset
sum(is.na(books_raw_renamed_date_conv))
# total number of missing values (NA, NaN) across columns in dataset
books %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
# total number of missing values (NA, NaN) across columns in dataset
books_raw_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
# load libraries
library(tidyverse)
library(janitor)
library(stringr)
books_raw <- read_csv("books.csv")
# get the dimensions
dim(books_raw)
# get variable names
names(books_raw)
# Use of janitor to clean names
books_janitor_clean <- books_raw %>%
clean_names()
books_janitor_clean %>%
names()
books_renamed <- books_janitor_clean %>%
rename("row_id" = "rowid", "isbn_13" = "isbn13")
books_renamed %>%
names()
glimpse(books_renamed)
head(books_renamed)
books_renamed_date_conv <- books_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y")) %>%
filter(is.na(publication_date))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed %>%
filter(rowid %in% c(8184, 11103))
books_renamed %>%
filter(row_id %in% c(8184, 11103))
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
summary(publication_date)
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
glimpse()
# load libraries
library(tidyverse)
library(janitor)
library(stringr)
books_raw <- read_csv("books.csv")
# get the dimensions
dim(books_raw)
# get variable names
names(books_raw)
# Use of janitor to clean names
books_janitor_clean <- books_raw %>%
clean_names()
books_janitor_clean %>%
names()
books_renamed <- books_janitor_clean %>%
rename("row_id" = "rowid", "isbn_13" = "isbn13")
books_renamed %>%
names()
glimpse(books_renamed)
head(books_renamed)
books_renamed_date_conv <- books_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
glimpse()
books <- books_renamed_date_conv
books %>%
select(title, average_rating) %>%
mutate(
book_ranking = case_when(
average_rating <=1 ~ "1-star: 0 <= average_rating <= 1",
average_rating <=2 ~ "2-star: 1 <  average_rating <= 2",
average_rating <=3 ~ "3-star: 2 <  average_rating <= 3",
average_rating <=4 ~ "4-star: 3 <  average_rating <= 4",
average_rating <=5 ~ "5-star: 4 <  average_rating <= 5",
TRUE               ~ "Error"
)
) %>%
group_by(book_ranking) %>%
summarise(ranking_count = n())
View(books)
books_renamed_date_conv <- books_renamed %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed_date_conv %>%
filter(is.na(publication_date))
head(books_renamed)
books_renamed_date_conv <- books_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
glimpse()
books <- books_renamed_date_conv %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books
books %>%
select(title, average_rating) %>%
mutate(
book_ranking = case_when(
average_rating <=1 ~ "1-star: 0 <= average_rating <= 1",
average_rating <=2 ~ "2-star: 1 <  average_rating <= 2",
average_rating <=3 ~ "3-star: 2 <  average_rating <= 3",
average_rating <=4 ~ "4-star: 3 <  average_rating <= 4",
average_rating <=5 ~ "5-star: 4 <  average_rating <= 5",
TRUE               ~ "Error"
)
) %>%
group_by(book_ranking) %>%
summarise(ranking_count = n())
books <- books_renamed %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books
books %>%
select(title, average_rating) %>%
mutate(
book_ranking = case_when(
average_rating <=1 ~ "1-star: 0 <= average_rating <= 1",
average_rating <=2 ~ "2-star: 1 <  average_rating <= 2",
average_rating <=3 ~ "3-star: 2 <  average_rating <= 3",
average_rating <=4 ~ "4-star: 3 <  average_rating <= 4",
average_rating <=5 ~ "5-star: 4 <  average_rating <= 5",
TRUE               ~ "Error"
)
) %>%
group_by(book_ranking) %>%
summarise(ranking_count = n())
# breakdown of 1-star ranking books
books %>%
filter(average_rating <= 1)
# breakdown of 1-star ranking books
books %>%
filter(average_rating <= 1) %>%
select(row_id, book_id, title, average_rating, ratings_count, text_reviews_count, publication_date)
# breakdown of 1-star ranking books
books %>%
filter(average_rating <= 1) %>%
select( title, average_rating, ratings_count, text_reviews_count)
books_avg_rating <- booksd %>%
mutate(runtime = na_if(average_rating, 0))
books_avg_rating <- booksd %>%
mutate(average_rating = na_if(average_rating, 0))
books_avg_rating <- books %>%
mutate(average_rating = na_if(average_rating, 0))
books_avg_rating %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_imputed %>%
summarise(count = sum(is.na(runtime)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
books_imputed %>%
slice_min(average_rating, n = 10)
books_imputed %>%
slice_max(average_rating, n = 10)
books_imputed %>%
slice_min(average_rating, n = 10)
books_imputed %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(difference_from_avg))
books_imputed %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(percentage_diff_from_median))
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
slice_max(average_rating, n = 10)
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
slice_min(average_rating, n = 10)
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(percentage_diff_from_median))
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange((percentage_diff_from_median))
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(percentage_diff_from_median))
books %>%
group_by(language_code) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(percentage_diff_from_median))
books_imputed %>%
group_by(language_code) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
books_imputed %>%
filter(language_code %in% c("eng", "en-US", "en-GB", "en-CA", "enm")) %>%
summarise(english_book_count = n())
books_imputed %>%
filter(language_code == "lat")
books_imputed %>%
filter(language_code == "gla")
books_imputed %>%
filter(language_code == "grc")
books %>%
filter(str_detect(publisher, "University") | str_detect(publisher, "MIT") | str_detect(publisher, "College")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
books %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) #%>%
group_by(publisher) %>%
summarise(uni_count = n())
books_imputed %>%
filter(str_detect(publisher, "University") | str_detect(publisher, "MIT") | str_detect(publisher, "College")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
group_by(publisher) %>%
summarise(audio_count = n())
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes"))
books_imputed %>%
select(title, num_pages)
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes"))
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
select(title, num_pages)
books_imputed %>%
filter(str_detect(publisher, "Marvel") | str_detect(publisher, "DC") | str_detect(publisher, "Comi")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
?as.Date
q()
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
# load libraries
library(tidyverse)
library(janitor)
library(stringr)
books_raw <- read_csv("books.csv")
# get the dimensions
dim(books_raw)
# get variable names
names(books_raw)
# Use of janitor to clean names
books_janitor_clean <- books_raw %>%
clean_names()
books_janitor_clean %>%
names()
books_renamed <- books_janitor_clean %>%
rename("row_id" = "rowid", "isbn_13" = "isbn13")
books_renamed %>%
names()
glimpse(books_renamed)
head(books_renamed)
books_renamed_date_conv <- books_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
glimpse()
books <- books_renamed %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books
books %>%
select(title, average_rating) %>%
mutate(
book_ranking = case_when(
average_rating <=1 ~ "1-star: 0 <= average_rating <= 1",
average_rating <=2 ~ "2-star: 1 <  average_rating <= 2",
average_rating <=3 ~ "3-star: 2 <  average_rating <= 3",
average_rating <=4 ~ "4-star: 3 <  average_rating <= 4",
average_rating <=5 ~ "5-star: 4 <  average_rating <= 5",
TRUE               ~ "Error"
)
) %>%
group_by(book_ranking) %>%
summarise(ranking_count = n())
# breakdown of 1-star ranking books
books %>%
filter(average_rating <= 1) %>%
select(title, average_rating, ratings_count, text_reviews_count)
books_avg_rating <- books %>%
mutate(average_rating = na_if(average_rating, 0))
books_avg_rating %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
median(average_rating, na.rm = TRUE))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
median(average_rating, na.rm = TRUE)
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_imputed  %>%
median(average_rating, na.rm = TRUE)
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating %>%
median(average_rating, na.rm = TRUE)
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
# books_avg_rating %>%
#   median(average_rating, na.rm = TRUE)
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating %>%
median(average_rating, na.rm = TRUE) %>%
pull
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating
books_avg_rating %>%
median(average_rating, na.rm = TRUE) %>%
pull
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
# books_avg_rating
books_avg_rating %>%
median(average_rating, na.rm = TRUE) %>%
pull()
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
# books_avg_rating
books_avg_rating %>%
mutate(meadian_avg_rating = median(average_rating, na.rm = TRUE)) %>%
pull()
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating %>%
mutate(meadian_avg_rating = median(average_rating, na.rm = TRUE)) %>%
summarise(meadian_avg_rating)
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating %>%
summarisee(meadian_avg_rating = median(average_rating, na.rm = TRUE)) %>%
pull()
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
books_avg_rating %>%
summarise(meadian_avg_rating = median(average_rating, na.rm = TRUE)) %>%
pull()
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
# load libraries
library(tidyverse)
library(janitor)
library(stringr)
books_raw <- read_csv("books.csv")
# get the dimensions
dim(books_raw)
# get variable names
names(books_raw)
# Use of janitor to clean names
books_janitor_clean <- books_raw %>%
clean_names()
books_janitor_clean %>%
names()
books_renamed <- books_janitor_clean %>%
rename("row_id" = "rowid", "isbn_13" = "isbn13")
books_renamed %>%
names()
glimpse(books_renamed)
head(books_renamed)
books_renamed_date_conv <- books_renamed %>%
select(row_id, book_id, title, publication_date) %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books_renamed_date_conv
# total number of missing values (NA, NaN) across columns in dataset
books_renamed_date_conv %>%
summarise(across(.cols = everything(), .fns = ~ sum(is.na(.x))))
books_renamed_date_conv %>%
filter(is.na(publication_date))
books_renamed %>%
filter(row_id %in% c(8184, 11103)) %>%
glimpse()
books <- books_renamed %>%
mutate(publication_date = as.Date(publication_date,"%m/%d/%Y"))
books
books %>%
select(title, average_rating) %>%
mutate(
book_ranking = case_when(
average_rating <=1 ~ "1-star: 0 <= average_rating <= 1",
average_rating <=2 ~ "2-star: 1 <  average_rating <= 2",
average_rating <=3 ~ "3-star: 2 <  average_rating <= 3",
average_rating <=4 ~ "4-star: 3 <  average_rating <= 4",
average_rating <=5 ~ "5-star: 4 <  average_rating <= 5",
TRUE               ~ "Error"
)
) %>%
group_by(book_ranking) %>%
summarise(ranking_count = n())
# breakdown of 1-star ranking books
books %>%
filter(average_rating <= 1) %>%
select(title, average_rating, ratings_count, text_reviews_count)
books_avg_rating <- books %>%
mutate(average_rating = na_if(average_rating, 0))
books_avg_rating %>%
summarise(count = sum(is.na(average_rating)))
books_imputed <- books_avg_rating %>%
mutate(average_rating = coalesce(average_rating, median(average_rating, na.rm = TRUE)))
# pull the median of all average rating values
books_avg_rating %>%
summarise(meadian_avg_rating = median(average_rating, na.rm = TRUE)) %>%
pull()
# check for NAs in average_rating data (it should be 0)
books_imputed %>%
summarise(count = sum(is.na(average_rating)))
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
slice_max(average_rating, n = 10)
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
slice_min(average_rating, n = 10)
books_imputed %>%
select(title, average_rating, publication_date, publisher) %>%
mutate(percentage_diff_from_median = 100*(average_rating - median(average_rating))/median(average_rating)) %>%
arrange(desc(percentage_diff_from_median))
books_imputed %>%
group_by(language_code) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
books_imputed %>%
filter(language_code %in% c("eng", "en-US", "en-GB", "en-CA", "enm")) %>%
summarise(english_book_count = n())
books_imputed %>%
filter(language_code == "lat")
books_imputed %>%
filter(language_code == "gla")
books_imputed %>%
filter(language_code == "grc")
books_imputed %>%
filter(str_detect(publisher, "University") | str_detect(publisher, "MIT") | str_detect(publisher, "College")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
group_by(publisher) %>%
summarise(audio_count = n())
books_imputed %>%
filter(str_detect(publisher, "Audio") | str_detect(publisher, "Tapes")) %>%
select(title, num_pages)
books_imputed %>%
filter(str_detect(publisher, "Marvel") | str_detect(publisher, "DC") | str_detect(publisher, "Comi")) %>%
group_by(publisher) %>%
summarise(uni_count = n())
q()
