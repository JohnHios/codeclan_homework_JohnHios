glimpse(ames)
ames %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
ames %>%
ggplot(aes(x = lot_area)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7, binwidth = 2000)
# specify that we want to look at lot_area variable, 1000 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = lot_area) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
bootstrap_sample %>%
ggplot(aes(x = stat)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7)
bootstrap_sample %>%
summarise(mean_lot_area = mean(stat))
infer_ci_95 <- bootstrap_sample %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95
bootstrap_sample %>%
visualise(bin = 20) +
shade_confidence_interval(endpoints = infer_ci_95)
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
library(tidyverse)
library(infer)
library(janitor)
ames <- read_csv("data/ames.csv") %>%
clean_names()
glimpse(ames)
ames %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
ames %>%
ggplot(aes(x = lot_area)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7, binwidth = 2000)
# specify that we want to look at lot_area variable, 5000 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = lot_area) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
bootstrap_sample %>%
ggplot(aes(x = stat)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7)
bootstrap_sample %>%
ggplot(aes(x = stat)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7)
bootstrap_sample %>%
summarise(mean_lot_area = mean(stat))
infer_ci_95 <- bootstrap_sample %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95
bootstrap_sample %>%
visualise(bin = 20) +
shade_confidence_interval(endpoints = infer_ci_95)
bootstrap_sample %>%
visualise(bin = 20) +
shade_confidence_interval(endpoints = infer_ci_95)
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
bootstrap_sample %>%
summarise(mean_lot_area = mean(stat))
house_built_before_1920 <- ames %>%
filter(year_built < 1920)
house_built_before_1920
ames %>%
mutate(built_before_1920 = if_else(year_built < 1920, "Yes", "No")) %>%
summarise(prop_before_1920 = mean(built_before_1920 == "Yes"))
ames %>%
mutate(built_before_1920 = if_else(year_built < 1920, "Yes", "No")) %>%
summarise(prop_built_before_1920 = mean(built_before_1920 == "Yes"))
ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
summarise(prop_built_before_1920 = mean(house_built_flag == "before_1920"))
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = house_built_flag) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
#calculation of point estimate
ames <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
summarise(prop_built_before_1920 = mean(house_built_flag == "before_1920"))
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = house_built_flag) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = house_built_flag) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
library(tidyverse)
library(infer)
library(janitor)
ames <- read_csv("data/ames.csv") %>%
clean_names()
glimpse(ames)
ames %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
ames %>%
ggplot(aes(x = lot_area)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7, binwidth = 2000)
# specify that we want to look at lot_area variable, 5000 reps, and want to calculate the mean
bootstrap_sample <- ames %>%
specify(response = lot_area) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
bootstrap_sample %>%
ggplot(aes(x = stat)) +
geom_histogram(col = "white", fill = "steel blue", alpha = 0.7)
infer_ci_95 <- bootstrap_sample %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95
bootstrap_sample %>%
visualise(bin = 20) +
shade_confidence_interval(endpoints = infer_ci_95)
infer_ci_99 <- bootstrap_sample %>%
get_confidence_interval(level = 0.99, type = "percentile")
infer_ci_99
bootstrap_sample %>%
summarise(mean_lot_area = mean(stat))
house_built_before_1920 <- ames %>%
filter(year_built < 1920)
#calculation of point estimate
ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
summarise(prop_built_before_1920 = mean(house_built_flag == "before_1920"))
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
?specify
vignette("infer")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, 1, 0)) %>%
specify(response = house_built_flag, success = 1) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "1", "0")) %>%
specify(response = house_built_flag, success =" 1") %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 200, type = "permute") %>%
calculate(stat = "mean")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 200, type = "draw") %>%
calculate(stat = "prop")
ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920"))
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 200, type = "draw") %>%
calculate(stat = "prop")
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_200 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95_200 <- bootstrap_sample_200 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_200
# specify that we want to look at house_built_flag, 200 reps, and want to calculate the mean
bootstrap_sample_2000 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 2000, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95_2000 <- bootstrap_sample_2000 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_2000
# specify that we want to look at house_built_flag, 20000 reps, and want to calculate the mean
bootstrap_sample_20000 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 20000, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95_20000 <- bootstrap_sample_20000 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_20000
# specify that we want to look at house_built_flag, 50000 reps, and want to calculate the mean
bootstrap_sample_50000 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 50000, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95_50000 <- bootstrap_sample_50000 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_50000
summarise(infer_ci_95_50000)
summarise(infer_ci_95_50000)
infer_ci_95_50000 <- bootstrap_sample_50000 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_50000
View(infer_ci_99)
[mean(house_built_flag == "before_1920"), infer_ci_95_50000]
c(mean(house_built_flag == "before_1920"), infer_ci_95_50000)
c(mean(ames$house_built_flag == "before_1920"), infer_ci_95_50000)
summarise(mean(ames$house_built_flag == "before_1920"), infer_ci_95_50000)
summarise(ames, mean(ames$house_built_flag == "before_1920"), infer_ci_95_50000)
summarise(ames, mean(ames$house_built_flag == "before_1920") #infer_ci_95_50000
summarise(ames, mean(ames$house_built_flag == "before_1920")
summarise(ames, mean = mean(ames$house_built_flag == "before_1920") #infer_ci_95_50000
summarise(ames, mean = mean(ames$house_built_flag == "before_1920") #infer_ci_95_50000
summarise(ames, mean = mean(ames$house_built_flag == "before_1920")) #infer_ci_95_50000
infer_ci_95_50000
# specify that we want to look at house_built_flag, 1000 reps, and want to calculate the mean
bootstrap_sample_1000 <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95_1000 <- bootstrap_sample_1000 %>%
get_confidence_interval(level = 0.95, type = "percentile")
infer_ci_95_1000
set.seed
?set.seed
?generate
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num %in% c(200, 1000, 2000)){ #, 5000, 10000, 20000, 50000)){
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000)){ #, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower = infer_ci_95 %>%
pull(lower_ci),
upper = infer_ci_95 %>%
pull(upper_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000)){ #, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = upper_bound - lower_bound
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000)){ #, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
results_reps
}
results_reps
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
summarise(prop_built_before_1920 = mean(house_built_flag == "before_1920"))
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
?mean
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# bootstrap_sample_rep %>%
# summarise(point_est = mean(stat))
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
point_est = mean(bootstrap_sample_rep$stat)
lower_bound = infer_ci_95 %>%
# specify that we want to look at house_built_flag, for 200, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# bootstrap_sample_rep %>%
# summarise(point_est = mean(stat))
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
point_est = mean(bootstrap_sample_rep$stat),
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
# specify that we want to look at house_built_flag, for 200, 500, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# bootstrap_sample_rep %>%
# summarise(point_est = mean(stat))
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
point_est = mean(bootstrap_sample_rep$stat),
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
# specify that we want to look at house_built_flag, for 200, 500, 1000, 2000, 5000, 10000, 20000, 50000 reps, and want to calculate the mean
results_reps <- tibble()
for (resamples_num in c(200, 500, 1000, 2000, 5000, 10000, 20000, 50000)){
bootstrap_sample_rep <- ames %>%
mutate(house_built_flag = if_else(year_built < 1920, "before_1920", "after_1920")) %>%
specify(response = house_built_flag, success = "before_1920") %>%
generate(reps = resamples_num, type = "bootstrap") %>%
calculate(stat = "prop")
infer_ci_95 <- bootstrap_sample_rep %>%
get_confidence_interval(level = 0.95, type = "percentile")
# bootstrap_sample_rep %>%
# summarise(point_est = mean(stat))
# prepare new row for results, storing CI bounds
this_result <- c(
resamples= resamples_num,
point_est = mean(bootstrap_sample_rep$stat),
lower_bound = infer_ci_95 %>%
pull(lower_ci),
upper_bound = infer_ci_95 %>%
pull(upper_ci),
ci_width = infer_ci_95 %>% pull(upper_ci) - infer_ci_95 %>% pull(lower_ci)
)
# add this_result to growing tibble of results
results_reps <- results_reps %>%
bind_rows(this_result)
}
results_reps
