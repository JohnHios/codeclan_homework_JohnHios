calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "left")
p_value
msleep_conservation <- msleep %>%
filter(!is.na(conservation))
msleep_conservation  %>%
group_by(conservation) %>%
summarise(prop = n()/nrow(msleep_conservation)) %>%
filter(conservation == "domesticated")
msleep_conservation_prop <- msleep_conservation %>%
mutate(conservation_flag = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
null_distribution <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 1000, type = "draw") %>%
calculate(stat = "prop")
head(null_distribution)
observed_stat <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "more")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "greater")
p_value
knitr::include_graphics("images/freq_bought_together.jpeg")
library(tidyverse)
transactions <- read_csv("data/online_retail_subset.csv")
head(transactions, 20)
library(arules)
library(arulesViz)
transactions_reformat <- transactions %>%
select(InvoiceNo, Description) %>%
na.omit()
write_csv(transactions_reformat, "transactions_reformat.csv")
apriori_format <- read.transactions("transactions_reformat.csv", format = "single", sep = ",", header = TRUE, cols = c("InvoiceNo", "Description"))
inspect(head(apriori_format))
msleep %>%
filter(vore == "omni"| vore == "herbi")
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
library(tidyverse)
data(msleep)
library(tidyverse)
library(infer)
data(msleep)
glimpse(msleep)
msleep %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", binwidth = 1) +
xlim(0, 22)
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot() +
xlim(0, 22)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
# specify that we want to look at sleep_total variable, 5000 reps, and want to calculate the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
library(tidyverse)
data(msleep)
library(tidyverse)
library(infer)
data(msleep)
glimpse(msleep)
msleep %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", binwidth = 1) +
xlim(0, 22)
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot() +
xlim(0, 22)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
# specify that we want to look at sleep_total variable, 5000 reps, and want to calculate the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "left")
p_value
msleep_conservation <- msleep %>%
filter(!is.na(conservation))
msleep_conservation  %>%
group_by(conservation) %>%
summarise(prop = n()/nrow(msleep_conservation)) %>%
filter(conservation == "domesticated")
msleep_conservation_prop <- msleep_conservation %>%
mutate(conservation_flag = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
null_distribution <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "draw") %>%
calculate(stat = "prop")
head(null_distribution)
observed_stat <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "more")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "greater")
p_value
knitr::include_graphics("images/freq_bought_together.jpeg")
library(tidyverse)
transactions <- read_csv("data/online_retail_subset.csv")
head(transactions, 20)
library(arules)
library(arulesViz)
transactions_reformat <- transactions %>%
select(InvoiceNo, Description) %>%
na.omit()
write_csv(transactions_reformat, "transactions_reformat.csv")
apriori_format <- read.transactions("transactions_reformat.csv", format = "single", sep = ",", header = TRUE, cols = c("InvoiceNo", "Description"))
inspect(head(apriori_format))
library(tidyverse)
data(msleep)
library(tidyverse)
library(infer)
data(msleep)
glimpse(msleep)
msleep %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", binwidth = 1) +
xlim(0, 22)
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot() +
xlim(0, 22)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
# specify that we want to look at sleep_total variable, 5000 reps, and want to calculate the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "left")
p_value
msleep_conservation <- msleep %>%
filter(!is.na(conservation))
msleep_conservation  %>%
group_by(conservation) %>%
summarise(prop = n()/nrow(msleep_conservation)) %>%
filter(conservation == "domesticated")
msleep_conservation_prop <- msleep_conservation %>%
mutate(conservation_flag = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
null_distribution <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "draw") %>%
calculate(stat = "prop")
head(null_distribution)
observed_stat <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "more")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "greater")
p_value
knitr::include_graphics("images/freq_bought_together.jpeg")
library(tidyverse)
transactions <- read_csv("data/online_retail_subset.csv")
head(transactions, 20)
library(arules)
library(arulesViz)
transactions_reformat <- transactions %>%
select(InvoiceNo, Description) %>%
na.omit()
write_csv(transactions_reformat, "transactions_reformat.csv")
apriori_format <- read.transactions("transactions_reformat.csv", format = "single", sep = ",", header = TRUE, cols = c("InvoiceNo", "Description"))
inspect(head(apriori_format))
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "greater")
library(tidyverse)
data(msleep)
library(tidyverse)
library(infer)
data(msleep)
glimpse(msleep)
msleep %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", binwidth = 1) +
xlim(0, 22)
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot() +
xlim(0, 22)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
# specify that we want to look at sleep_total variable, 5000 reps, and want to calculate the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "left")
p_value
msleep_conservation <- msleep %>%
filter(!is.na(conservation))
msleep_conservation  %>%
group_by(conservation) %>%
summarise(prop = n()/nrow(msleep_conservation)) %>%
filter(conservation == "domesticated")
msleep_conservation_prop <- msleep_conservation %>%
mutate(conservation_flag = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
null_distribution <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "draw") %>%
calculate(stat = "prop")
head(null_distribution)
observed_stat <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "greater")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "greater")
p_value
knitr::include_graphics("images/freq_bought_together.jpeg")
library(tidyverse)
transactions <- read_csv("data/online_retail_subset.csv")
head(transactions, 20)
library(arules)
library(arulesViz)
transactions_reformat <- transactions %>%
select(InvoiceNo, Description) %>%
na.omit()
write_csv(transactions_reformat, "transactions_reformat.csv")
apriori_format <- read.transactions("transactions_reformat.csv", format = "single", sep = ",", header = TRUE, cols = c("InvoiceNo", "Description"))
inspect(head(apriori_format))
library(tidyverse)
data(msleep)
library(tidyverse)
library(infer)
data(msleep)
glimpse(msleep)
msleep %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_histogram(col = "white", binwidth = 1) +
xlim(0, 22)
msleep  %>%
ggplot(aes(x = sleep_total)) +
geom_boxplot() +
xlim(0, 22)
observed_stat <- msleep %>%
summarise(mean_sleep = mean(sleep_total))
observed_stat
# specify that we want to look at sleep_total variable, 5000 reps, and want to calculate the mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualize(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep, direction = "both")
p_value
msleep_hrs <- msleep %>%
filter(vore == "omni"| vore == "herbi") %>%
select(vore, sleep_total)
head(msleep_hrs)
msleep_hrs %>%
group_by(vore) %>%
summarise(n = n())
msleep_hrs %>%
ggplot(aes(y = sleep_total, x = vore)) +
geom_boxplot()
null_distribution <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- msleep_hrs %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat, direction = "right")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "left")
p_value
msleep_conservation <- msleep %>%
filter(!is.na(conservation))
msleep_conservation  %>%
group_by(conservation) %>%
summarise(prop = n()/nrow(msleep_conservation)) %>%
filter(conservation == "domesticated")
msleep_conservation_prop <- msleep_conservation %>%
mutate(conservation_flag = if_else(conservation == "domesticated", "domesticated", "not_domesticated"))
null_distribution <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "draw") %>%
calculate(stat = "prop")
head(null_distribution)
observed_stat <- msleep_conservation_prop %>%
specify(response = conservation_flag, success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 10) +
shade_p_value(obs_stat = observed_stat, direction = "greater")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat, direction = "greater")
p_value
knitr::include_graphics("images/freq_bought_together.jpeg")
library(tidyverse)
transactions <- read_csv("data/online_retail_subset.csv")
head(transactions, 20)
library(arules)
library(arulesViz)
transactions_reformat <- transactions %>%
select(InvoiceNo, Description) %>%
na.omit()
write_csv(transactions_reformat, "transactions_reformat.csv")
apriori_format <- read.transactions("transactions_reformat.csv", format = "single", sep = ",", header = TRUE, cols = c("InvoiceNo", "Description"))
inspect(head(apriori_format))
