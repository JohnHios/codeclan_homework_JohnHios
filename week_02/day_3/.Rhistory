hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(i),
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(i)
cat("\n")
}
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,|))
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|"))
cat("\n")
}
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|", hist_vector(i)))
cat("\n")
}
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|", hist_vector(i)))
cat("\n")
}
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|", hist_vector[i])
cat("\n")
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|") hist_vector[i])
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|"), hist_vector[i])
cat("\n")
}
q()
# Test inputs
# identical char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("cake", "lake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("cake", "lake", "fake", "take")')
cat("\n")
cat("\n")
# Call function
vector_check(x, y)
# function definition
vector_check <- function(x, y){
if (all(x == y)){
return("Exactly the same")
}
else {
x_sorted <- sort(x)
y_sorted <- sort(y)
if (all(x_sorted == y_sorted)){
return("The same")
}
}
return("Different")
}
# Test inputs
# identical char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("cake", "lake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("cake", "lake", "fake", "take")')
cat("\n")
cat("\n")
# Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Same char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Different char vectors
x <- c("foo", "bar", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("foo", "bar", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# identical num vectors
x <- c(1:4)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(1:4)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# same num vectors
x <- c(4:1)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(4:1)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(3:6)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(3:6)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(1:2)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(3:6)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
# Test inputs
# identical char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("cake", "lake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("cake", "lake", "fake", "take")')
cat("\n")
cat("\n")
# Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Same char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Different char vectors
x <- c("foo", "bar", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("foo", "bar", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# identical num vectors
x <- c(1:4)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(1:4)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# same num vectors
x <- c(4:1)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(4:1)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(3:6)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(3:6)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(1:2)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(1:2)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
weather_forecast_gla_3day <- list("Thursday" = list(temperature = 8, chance_of_rain = 32, wind_speed = 19),
"Friday" =  list(temperature = 10, chance_of_rain = 10, wind_speed = 13),
"Saturday" = list(temperature = 12, chance_of_rain = 9, wind_speed = 10))
print(weather_forecast_gla_3day)
print("Chance of rain tomorrow (%)")
weather_forecast_gla_3day$Thursday$chance_of_rain
cat("\n")
print("Wind speed on the day after tomorrow (knts)")
weather_forecast_gla_3day$Friday$wind_speed
cat("\n")
print("Temperature tomorrow (Deg Celsius)")
weather_forecast_gla_3day$Thursday$temperature
temperatures <- c(9, 12, 14, 12, 11, 12, 13, 13, 13, 13, 12, 11, 11, 10) # create a vector with temperature forecasts
temperature_forecast_gla_14day <- matrix(temperatures, nrow = 2, ncol = 7, byrow = T)
print(temperature_forecast_gla_14day)
print("Third day of the second week")
week <- 2
day <- 3
temperature_forecast_gla_14day[week, day]
cat("\n")
print("Whole second week")
week <- 2
day <- 1:7
temperature_forecast_gla_14day[week, day]
cat("\n")
print("First, third and fifth days in both weeks")
week <- 1:2
day <- c(1, 3, 5)
temperature_forecast_gla_14day[week, day]
# function definition
my_input_func <- function(x){
if (is.character(x) == TRUE){
return(paste("The answer is: ", x))
} else if (is.numeric(x) == TRUE){
if (x < 10){
return(x)
}else if (x > 10){
return(x/10)
}else {
return(print("Invalid input"))
}
}
}
# Test input
my_input <- 1000
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- 2
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- 10
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- "Character"
my_input_func(my_input)
# function definition
vector_check <- function(x, y){
if (all(x == y)){
return("Exactly the same")
}
else {
x_sorted <- sort(x)
y_sorted <- sort(y)
if (all(x_sorted == y_sorted)){
return("The same")
}
}
return("Different")
}
# Test inputs
# identical char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("cake", "lake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("cake", "lake", "fake", "take")')
cat("\n")
cat("\n")
# Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Same char vectors
x <- c("cake", "lake", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("cake", "lake", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# Different char vectors
x <- c("foo", "bar", "fake", "take")
y <- c("lake", "cake", "fake", "take")
cat("Input vectors:")
cat("\n")
cat('x <- c("foo", "bar", "fake", "take")')
cat("\n")
cat('y <- c("lake", "cake", "fake", "take")')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# identical num vectors
x <- c(1:4)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(1:4)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# same num vectors
x <- c(4:1)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(4:1)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(3:6)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(3:6)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
####-----------------------------------
cat("\n")
cat("\n")
# different num vectors
x <- c(1:2)
y <- c(1:4)
cat("Input vectors:")
cat("\n")
cat('x <- c(1:2)')
cat("\n")
cat('y <- c(1:4)')
cat("\n")
cat("\n")
## Call function
vector_check(x, y)
# Initialize 12 x 12 multiplication table
matrix_12x12 <- matrix(0, nrow = 12,  ncol = 12)
# populate 12 x 12 multiplication table
for (row_number in 1:12){
for (col_number in 1:12){
matrix_12x12[row_number, col_number] <- row_number * col_number
}
}
print("12 x 12 multiplication table:")
cat("\n")
matrix_12x12
# define histogram
hist_vector <- c("***", "*", "*******", "****", "**")
for (i in 1:length(hist_vector)) {
cat(paste(i,"|"), hist_vector[i])
cat("\n")
}
# function definition
my_input_func <- function(x){
if (is.character(x)){
return(paste("The answer is: ", x))
} else if (is.numeric(x)){
if (x < 10){
return(x)
}else if (x > 10){
return(x/10)
}else {
return(print("Invalid input"))
}
}
}
# Test input
my_input <- 1000
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- 2
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- 10
# Call function
my_input_func(my_input)
cat("\n")
# Test input
my_input <- "Character"
my_input_func(my_input)
c(1:3) %in% c(3, 2, 1, 4, 23)
c(1:3) %in% c(23, 3, 2, 1, 4)
c(1:3) %in% c(1, 2, 5)
"c(1:3)" %in% "c(1, 2, 5)"
c(1:3) %in% c(1, 2, 5)
c(1:3) == c(1, 2, 5)
c(1:3) %in% c(1, 2, 5)
c(1:3) %in% c(1, 2, 5, 3)
c(1:3) == c(1, 2, 5, 3)
c(1:2) == c(1, 2, 5, 3)
c(1:2) == c(1, 2, 1, 2)
c(1) == c(1, 2, 1, 2)
c(1:2) == c(1, 2, 5, 2)
