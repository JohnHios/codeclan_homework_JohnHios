# create test set
titanic_test  <- slice(titanic_clean, test_index)
# create training set
titanic_train <- slice(titanic_clean, -test_index)
# check balanced sets
titanic_test %>%
janitor::tabyl(survived)
titanic_train %>%
janitor::tabyl(survived)
n_data <- nrow(titanic_clean)
# create a test sample index
test_index <- sample(1:n_data, size = n_data*0.2)
# create test set
titanic_test  <- slice(titanic_clean, test_index)
# create training set
titanic_train <- slice(titanic_clean, -test_index)
# check balanced sets
titanic_test %>%
janitor::tabyl(survived)
titanic_train %>%
janitor::tabyl(survived)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 4)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "parch", "embrarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "parch", "embarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
titanic_test_strat <- sets$SAMP1
titanic_train_strat <- sets$SAMP2
nrow(titanic_test_strat)
nrow(titanic_train)
tibble(
nrows_testing_strat = nrow(titanic_test_strat),
nrows_training_strat = nrow(titanic_train)
)
titanic_test_strat %>%
janitor::tabyl(survived)
titanic_train_strat %>%
janitor::tabyl(survived)
titanic_test_strat %>%
janitor::tabyl(parch)
titanic_train_strat %>%
janitor::tabyl(parch)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "embarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
titanic_test_strat <- sets$SAMP1
titanic_train_strat <- sets$SAMP2
tibble(
nrows_testing_strat = nrow(titanic_test_strat),
nrows_training_strat = nrow(titanic_train)
)
titanic_test_strat %>%
janitor::tabyl(survived)
titanic_train_strat %>%
janitor::tabyl(survived)
titanic_test_strat %>%
janitor::tabyl(parch)
titanic_train_strat %>%
janitor::tabyl(parch)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "parch", "embarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
titanic_test_strat <- sets$SAMP1
titanic_train_strat <- sets$SAMP2
tibble(
nrows_testing_strat = nrow(titanic_test_strat),
nrows_training_strat = nrow(titanic_train)
)
titanic_test_strat %>%
janitor::tabyl(survived)
titanic_train_strat %>%
janitor::tabyl(survived)
titanic_test_strat %>%
janitor::tabyl(parch)
titanic_train_strat %>%
janitor::tabyl(parch)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "embarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
titanic_test_strat <- sets$SAMP1
titanic_train_strat <- sets$SAMP2
tibble(
nrows_testing_strat = nrow(titanic_test_strat),
nrows_training_strat = nrow(titanic_train)
)
titanic_test_strat %>%
janitor::tabyl(survived)
titanic_train_strat %>%
janitor::tabyl(survived)
titanic_test_strat %>%
janitor::tabyl(embarked)
titanic_train_strat %>%
janitor::tabyl(embarked)
titanic_test_strat %>%
janitor::tabyl(pclass)
titanic_train_strat %>%
janitor::tabyl(pclass)
titanic_test_strat %>%
janitor::tabyl(sex)
titanic_train_strat %>%
janitor::tabyl(sex)
titanic_test_strat %>%
janitor::tabyl(age_status)
titanic_train_strat %>%
janitor::tabyl(age_status)
titanic_test_strat %>%
janitor::tabyl(parch)
titanic_train_strat %>%
janitor::tabyl(parch)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train_strat,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 4)
library(rpart)
library(rpart.plot)
library(tidyverse)
library(tidyverse)
titanic_set <- read_csv('data/titanic_decision_tree_data.csv')
shuffle_index <- sample(1:nrow(titanic_set))
# shuffle the data so class order isn't in order - need this for training/testing split later on
titanic_set <- titanic_set[shuffle_index, ]
titanic_set %>%
glimpse()
titanic_set %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
titanic_clean <- titanic_set %>%
# remove observations which have a ``survived`` flag equal to NA
filter(!is.na(survived))  %>%
# create an ``age_status`` variable and factor important variables
mutate(
sex = as.factor(sex),
survived = factor(survived, levels = c(0,1), labels = c("No", "Yes")),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("Upper", "Middle", "Lower")),
embarked = as.factor(embarked),
age_status = as.factor(if_else(age <= 16, "child", "adult"))
) %>%
# keep useful variables
select(sex, survived, pclass, embarked, age_status, sib_sp, parch) %>%
# drop NA values
drop_na()
glimpse(titanic_clean)
titanic_clean %>%
summarise(across(.cols = everything(),
.fns = ~sum(is.na(.x))))
titanic_clean_numeric <- titanic_clean %>%
select_if(is.numeric)
titanic_clean_numeric$survived <- titanic_clean$survived
titanic_clean_nonnumeric <- titanic_clean %>%
select_if(function(x) !is.numeric(x))
library(GGally)
titanic_clean_numeric %>%
ggpairs()
titanic_clean_nonnumeric %>%
ggpairs()
titanic_clean_numeric %>%
ggplot() +
aes(x = parch, fill = survived) +
geom_histogram(position = "dodge")
# set the random seed number
set.seed(45678)
n_data <- nrow(titanic_clean)
# create a test sample index
test_index <- sample(1:n_data, size = n_data*0.2)
# create test set
titanic_test  <- slice(titanic_clean, test_index)
# create training set
titanic_train <- slice(titanic_clean, -test_index)
# check balanced sets
titanic_test %>%
janitor::tabyl(survived)
titanic_train %>%
janitor::tabyl(survived)
library(splitstackshape)
sets <- stratified(titanic_clean, group = c("survived", "embarked", "pclass", "sex", "age_status"), bothSets = TRUE, size = 0.2)
titanic_test_strat <- sets$SAMP1
titanic_train_strat <- sets$SAMP2
tibble(
nrows_testing_strat = nrow(titanic_test_strat),
nrows_training_strat = nrow(titanic_train)
)
titanic_test_strat %>%
janitor::tabyl(survived)
titanic_train_strat %>%
janitor::tabyl(survived)
titanic_test_strat %>%
janitor::tabyl(embarked)
titanic_train_strat %>%
janitor::tabyl(embarked)
titanic_test_strat %>%
janitor::tabyl(pclass)
titanic_train_strat %>%
janitor::tabyl(pclass)
titanic_test_strat %>%
janitor::tabyl(sex)
titanic_train_strat %>%
janitor::tabyl(sex)
titanic_test_strat %>%
janitor::tabyl(age_status)
titanic_train_strat %>%
janitor::tabyl(age_status)
titanic_test_strat %>%
janitor::tabyl(parch)
titanic_train_strat %>%
janitor::tabyl(parch)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 4)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train_strat,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 4)
?rpart.plot
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 3)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train_strat,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 3)
titanic_fit <- rpart(
formula = survived ~ .,
data = titanic_train,
method = 'class'
)
rpart.plot(titanic_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 3)
titanic_fit_strat <- rpart(
formula = survived ~ .,
data = titanic_train_strat,
method = 'class'
)
rpart.plot(titanic_fit_strat,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 3)
rpart.plot(thrones_fit,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 4,
type = 4,
extra = 101)
rpart.plot(titanic_fit_strat,
yesno = 2,
fallen.leaves = TRUE,
faclen = 6,
digits = 3,
type = 4,
extra = 101)
rpart.plot(titanic_fit_strat,
yesno = 2,
type = 4,
extra = 101)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived)
filter(
sex == "Male",
pclass == "Upper"
)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived)
filter(
sex == "Male",
pclass == "Upper"
) %>%
summarise(count = sum(survived)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male",
pclass == "Upper"
) %>%
summarise(count = sum(survived)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male",
pclass == "Upper"
) %>%
summarise(count = sum(survived))
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male",
pclass == "Upper"
)
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male",
pclass == "Upper"
) %>%
summarise(count = n())
rpart.plot(titanic_fit_strat, yesno = 2, type = 4, extra = 101)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male",
pclass == "Upper"
)
View(titanic_train_strat)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "Male"
)
titanic_train_strat %>%
filter(
sex == "Male",
pclass == "Upper"
)
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex = "Male",
pclass = "Upper"
) %>%
summarise(count = n())
titanic_train_strat %>%
group_by(survived) %>%
filter(
sex == "male",
pclass == "Upper"
) %>%
summarise(count = n())
49/(49+32)
32/(49+32)
library(modelr)
# add the predictions
thrones_test_pred <- thrones_test %>%
add_predictions(thrones_fit, type = 'class')
library(modelr)
# add the predictions
titanic_test_strat_pred <- titanic_test_strat %>%
add_predictions(titanic_fit_strat, type = 'class')
# look at the variables
titanic_test_strat_pred %>%
select(sex, pclass, age_status, sib_sp, parch, pred)
library(yardstick)
conf_mat <- titanic_test_strat_pred %>%
conf_mat(truth = survived, estimate = pred)
conf_mat
library(yardstick)
conf_mat <- titanic_test_strat_pred %>%
conf_mat(truth = survived, estimate = pred)
conf_mat
accuracy <- titanic_test_strat_pred %>%
accuracy(truth = survived, estimate = pred)
accuracy
titanic_test_strat_pred %>%
sensitivity(truth = survived, estimate = pred)
titanic_test_strat_pred %>%
specificity(truth = survived, estimate = pred)
titanic_test_strat_pred %>%
accuracy(truth = survived, estimate = pred)
titanic_test_strat_pred %>%
c(
accuracy(truth = survived, estimate = pred),
sensitivity(truth = survived, estimate = pred),
specificity(truth = survived, estimate = pred)
)
titanic_test_strat_pred %>%
tibble(
accuracy(truth = survived, estimate = pred),
sensitivity(truth = survived, estimate = pred),
specificity(truth = survived, estimate = pred)
)
titanic_test_strat_pred %>%
c(
accuracy(truth = survived, estimate = pred),
sensitivity(truth = survived, estimate = pred),
specificity(truth = survived, estimate = pred)
)
titanic_test_strat_pred %>%
accuracy(truth = survived, estimate = pred)
#   sensitivity(truth = survived, estimate = pred),
#   specificity(truth = survived, estimate = pred)
# )
tibble(
accuracy = accuracy(titanic_test_strat_pred, truth = survived, estimate = pred),
sensitivity = sensitivity(titanic_test_strat_pred, truth = survived, estimate = pred),
specificity = specificity(titanic_test_strat_pred, truth = survived, estimate = pred)
)
tibble(
test = accuracy(titanic_test_strat_pred, truth = survived, estimate = pred),
sensitivity(titanic_test_strat_pred, truth = survived, estimate = pred),
specificity(titanic_test_strat_pred, truth = survived, estimate = pred)
)
tibble(
accuracy = accuracy(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
sensitivity = sensitivity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
specificity = specificity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate
)
tibble(
accuracy = accuracy(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
sensitivity = sensitivity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
specificity = specificity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate
)
tibble(
accuracy = accuracy(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
sensitivity = sensitivity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate,
specificity = specificity(titanic_test_strat_pred, truth = survived, estimate = pred)$.estimate
)
titanic_test_strat_pred %>%
tibble(
accuracy = accuracy(truth = survived, estimate = pred)$.estimate,
sensitivity = sensitivity(truth = survived, estimate = pred)$.estimate,
specificity = specificity(truth = survived, estimate = pred)$.estimate
)
titanic_test_strat_pred %>%
tibble(
accuracy = accuracy(,truth = survived, estimate = pred)$.estimate,
sensitivity = sensitivity(,truth = survived, estimate = pred)$.estimate,
specificity = specificity(,truth = survived, estimate = pred)$.estimate
)
library(caret)
confusionMatrix(titanic_test_strat_pred$pred, titanic_test_strat_pred$survived) #order is estimate and then truth
library(caret)
confusionMatrix(titanic_test_strat_pred$pred, titanic_test_strat_pred$survived) #order is estimate and then truth
library(ranger)
control <- trainControl(
method = "repeatedcv",
number = 5,
repeats = 10
)
tune_grid = expand.grid(
mtry = 1:6,
splitrule = c("gini", "extratrees"),
min.node.size = c(1, 3, 5)
)
rf_tune <- train(
survived_flag ~ .,
data = titanic_train_strat,
method = "ranger",
metric = "Kappa",
num.trees = 1000,
importance = "impurity",
tuneGrid = tune_grid,
trControl = control
)
rf_tune <- train(
survived ~ .,
data = titanic_train_strat,
method = "ranger",
metric = "Kappa",
num.trees = 1000,
importance = "impurity",
tuneGrid = tune_grid,
trControl = control
)
plot(rf_tune)
rf_tune
rf_tune
rf_classifier <- ranger(survived_flag ~ ., mtry = 2, data = titanic_train, splitrule = "gini", min.node.size = 5, num.trees = 1000, importance = "impurity")
rf_classifier <- ranger(survived ~ ., mtry = 2, data = titanic_train, splitrule = "gini", min.node.size = 5, num.trees = 1000, importance = "impurity")
titanic_train_strat_pred <- titanic_train_strat %>%
mutate(pred = predict(rf_classifier, data = titanic_train_strat)$predictions)
confusionMatrix(data = titanic_train_strat_pred$pred, reference = titanic_train_strat_pred$survived)
titanic_test_strat_pred <- titanic_test_strat %>%
mutate(pred = predict(rf_classifier, data = titanic_test_strat)$predictions)
confusionMatrix(data = titanic_test_strat_pred$pred, reference = titanic_test_strat_pred$survived)
importance(rf_classifier)
